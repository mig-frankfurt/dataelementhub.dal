/*
 * This file is generated by jOOQ.
 */
package de.dataelementhub.dal.jooq.tables.pojos;


import de.dataelementhub.dal.jooq.enums.ValidationDatatypeType;
import de.dataelementhub.dal.jooq.enums.ValidationSubtypeType;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Validation implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer                id;
    private Integer                elementId;
    private ValidationDatatypeType datatype;
    private ValidationSubtypeType  subtype;
    private String                 format;
    private String                 unitOfMeasure;
    private Integer                maximumCharacters;

    public Validation() {}

    public Validation(Validation value) {
        this.id = value.id;
        this.elementId = value.elementId;
        this.datatype = value.datatype;
        this.subtype = value.subtype;
        this.format = value.format;
        this.unitOfMeasure = value.unitOfMeasure;
        this.maximumCharacters = value.maximumCharacters;
    }

    public Validation(
        Integer                id,
        Integer                elementId,
        ValidationDatatypeType datatype,
        ValidationSubtypeType  subtype,
        String                 format,
        String                 unitOfMeasure,
        Integer                maximumCharacters
    ) {
        this.id = id;
        this.elementId = elementId;
        this.datatype = datatype;
        this.subtype = subtype;
        this.format = format;
        this.unitOfMeasure = unitOfMeasure;
        this.maximumCharacters = maximumCharacters;
    }

    /**
     * Getter for <code>public.validation.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.validation.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.validation.element_id</code>.
     */
    public Integer getElementId() {
        return this.elementId;
    }

    /**
     * Setter for <code>public.validation.element_id</code>.
     */
    public void setElementId(Integer elementId) {
        this.elementId = elementId;
    }

    /**
     * Getter for <code>public.validation.datatype</code>.
     */
    public ValidationDatatypeType getDatatype() {
        return this.datatype;
    }

    /**
     * Setter for <code>public.validation.datatype</code>.
     */
    public void setDatatype(ValidationDatatypeType datatype) {
        this.datatype = datatype;
    }

    /**
     * Getter for <code>public.validation.subtype</code>.
     */
    public ValidationSubtypeType getSubtype() {
        return this.subtype;
    }

    /**
     * Setter for <code>public.validation.subtype</code>.
     */
    public void setSubtype(ValidationSubtypeType subtype) {
        this.subtype = subtype;
    }

    /**
     * Getter for <code>public.validation.format</code>.
     */
    public String getFormat() {
        return this.format;
    }

    /**
     * Setter for <code>public.validation.format</code>.
     */
    public void setFormat(String format) {
        this.format = format;
    }

    /**
     * Getter for <code>public.validation.unit_of_measure</code>.
     */
    public String getUnitOfMeasure() {
        return this.unitOfMeasure;
    }

    /**
     * Setter for <code>public.validation.unit_of_measure</code>.
     */
    public void setUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
    }

    /**
     * Getter for <code>public.validation.maximum_characters</code>.
     */
    public Integer getMaximumCharacters() {
        return this.maximumCharacters;
    }

    /**
     * Setter for <code>public.validation.maximum_characters</code>.
     */
    public void setMaximumCharacters(Integer maximumCharacters) {
        this.maximumCharacters = maximumCharacters;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Validation (");

        sb.append(id);
        sb.append(", ").append(elementId);
        sb.append(", ").append(datatype);
        sb.append(", ").append(subtype);
        sb.append(", ").append(format);
        sb.append(", ").append(unitOfMeasure);
        sb.append(", ").append(maximumCharacters);

        sb.append(")");
        return sb.toString();
    }
}
