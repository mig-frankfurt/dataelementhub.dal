/*
 * This file is generated by jOOQ.
 */
package de.dataelementhub.dal.jooq.tables.records;


import de.dataelementhub.dal.jooq.enums.ValidationDatatypeType;
import de.dataelementhub.dal.jooq.enums.ValidationSubtypeType;
import de.dataelementhub.dal.jooq.tables.Validation;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ValidationRecord extends UpdatableRecordImpl<ValidationRecord> implements Record7<Integer, Integer, ValidationDatatypeType, ValidationSubtypeType, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.validation.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.validation.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.validation.element_id</code>.
     */
    public void setElementId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.validation.element_id</code>.
     */
    public Integer getElementId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.validation.datatype</code>.
     */
    public void setDatatype(ValidationDatatypeType value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.validation.datatype</code>.
     */
    public ValidationDatatypeType getDatatype() {
        return (ValidationDatatypeType) get(2);
    }

    /**
     * Setter for <code>public.validation.subtype</code>.
     */
    public void setSubtype(ValidationSubtypeType value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.validation.subtype</code>.
     */
    public ValidationSubtypeType getSubtype() {
        return (ValidationSubtypeType) get(3);
    }

    /**
     * Setter for <code>public.validation.format</code>.
     */
    public void setFormat(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.validation.format</code>.
     */
    public String getFormat() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.validation.unit_of_measure</code>.
     */
    public void setUnitOfMeasure(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.validation.unit_of_measure</code>.
     */
    public String getUnitOfMeasure() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.validation.maximum_characters</code>.
     */
    public void setMaximumCharacters(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.validation.maximum_characters</code>.
     */
    public Integer getMaximumCharacters() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, ValidationDatatypeType, ValidationSubtypeType, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, ValidationDatatypeType, ValidationSubtypeType, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Validation.VALIDATION.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Validation.VALIDATION.ELEMENT_ID;
    }

    @Override
    public Field<ValidationDatatypeType> field3() {
        return Validation.VALIDATION.DATATYPE;
    }

    @Override
    public Field<ValidationSubtypeType> field4() {
        return Validation.VALIDATION.SUBTYPE;
    }

    @Override
    public Field<String> field5() {
        return Validation.VALIDATION.FORMAT;
    }

    @Override
    public Field<String> field6() {
        return Validation.VALIDATION.UNIT_OF_MEASURE;
    }

    @Override
    public Field<Integer> field7() {
        return Validation.VALIDATION.MAXIMUM_CHARACTERS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getElementId();
    }

    @Override
    public ValidationDatatypeType component3() {
        return getDatatype();
    }

    @Override
    public ValidationSubtypeType component4() {
        return getSubtype();
    }

    @Override
    public String component5() {
        return getFormat();
    }

    @Override
    public String component6() {
        return getUnitOfMeasure();
    }

    @Override
    public Integer component7() {
        return getMaximumCharacters();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getElementId();
    }

    @Override
    public ValidationDatatypeType value3() {
        return getDatatype();
    }

    @Override
    public ValidationSubtypeType value4() {
        return getSubtype();
    }

    @Override
    public String value5() {
        return getFormat();
    }

    @Override
    public String value6() {
        return getUnitOfMeasure();
    }

    @Override
    public Integer value7() {
        return getMaximumCharacters();
    }

    @Override
    public ValidationRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ValidationRecord value2(Integer value) {
        setElementId(value);
        return this;
    }

    @Override
    public ValidationRecord value3(ValidationDatatypeType value) {
        setDatatype(value);
        return this;
    }

    @Override
    public ValidationRecord value4(ValidationSubtypeType value) {
        setSubtype(value);
        return this;
    }

    @Override
    public ValidationRecord value5(String value) {
        setFormat(value);
        return this;
    }

    @Override
    public ValidationRecord value6(String value) {
        setUnitOfMeasure(value);
        return this;
    }

    @Override
    public ValidationRecord value7(Integer value) {
        setMaximumCharacters(value);
        return this;
    }

    @Override
    public ValidationRecord values(Integer value1, Integer value2, ValidationDatatypeType value3, ValidationSubtypeType value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ValidationRecord
     */
    public ValidationRecord() {
        super(Validation.VALIDATION);
    }

    /**
     * Create a detached, initialised ValidationRecord
     */
    public ValidationRecord(Integer id, Integer elementId, ValidationDatatypeType datatype, ValidationSubtypeType subtype, String format, String unitOfMeasure, Integer maximumCharacters) {
        super(Validation.VALIDATION);

        setId(id);
        setElementId(elementId);
        setDatatype(datatype);
        setSubtype(subtype);
        setFormat(format);
        setUnitOfMeasure(unitOfMeasure);
        setMaximumCharacters(maximumCharacters);
    }

    /**
     * Create a detached, initialised ValidationRecord
     */
    public ValidationRecord(de.dataelementhub.dal.jooq.tables.pojos.Validation value) {
        super(Validation.VALIDATION);

        if (value != null) {
            setId(value.getId());
            setElementId(value.getElementId());
            setDatatype(value.getDatatype());
            setSubtype(value.getSubtype());
            setFormat(value.getFormat());
            setUnitOfMeasure(value.getUnitOfMeasure());
            setMaximumCharacters(value.getMaximumCharacters());
        }
    }
}
